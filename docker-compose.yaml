version: '3'

services:
  mongo1:
    image: mongo
    container_name: mongo1
    command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0"]
    ports:
      - 27017:27017
    networks:
      - mongo-network

  mongo2:
    image: mongo
    container_name: mongo2
    command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0"]
    networks:
      - mongo-network

  mongo3:
    image: mongo
    container_name: mongo3
    command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0"]
    networks:
      - mongo-network

  mongo-init:
    image: mongo
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-network
    entrypoint: [ "bash", "-c", "sleep 10 && mongosh --host mongo1 --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" }]})'" ]

  app:
    build: .
    ports:
      - 3000:3000
      - 3001:3001
    volumes:
      - .:/home/node/app
    depends_on:
      - mongo-init
    networks:
      - mongo-network
  
  kong-database:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "kong", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - kong-data:/var/lib/postgresql/data

  kong-migrations-up:
    image: kong
    command: kong migrations up
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      kong-database:
        condition: service_healthy

  kong-migrations-finish:
    image: kong
    command: kong migrations finish
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-migrations-up

  kong:
    image: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    volumes:
      - ./kong/declarative:/kong/declarative
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - kong-database
      - kong-migrations-finish

volumes:
  kong-data:

networks:
  mongo-network:
    driver: bridge